diff --git a/src/buffer.zig b/src/buffer.zig
index f8ac475..1f136b1 100644
--- a/src/buffer.zig
+++ b/src/buffer.zig
@@ -670,6 +670,12 @@ pub const Buffer = struct {
         try self.commitChanges();
     }
 
+    pub fn format(self: *Buffer) !void {
+        for (self.lsp_connections.items) |conn| {
+            try conn.format();
+        }
+    }
+
     pub fn copySelectionToClipboard(self: *Buffer) !void {
         if (self.selection) |selection| {
             const text = try self.rawTextAt(self.allocator, selection);
diff --git a/src/lsp.zig b/src/lsp.zig
index 3781d75..97e7df9 100644
--- a/src/lsp.zig
+++ b/src/lsp.zig
@@ -189,6 +189,8 @@ pub const LspConnection = struct {
                         try self.handleHoverResponse(arena.allocator(), response_result);
                     } else if (std.mem.eql(u8, method, "textDocument/rename")) {
                         try self.handleRenameResponse(arena.allocator(), response_result);
+                    } else if (std.mem.eql(u8, method, "textDocument/formatting")) {
+                        try self.handleFormattingResponse(arena.allocator(), response_result);
                     }
                 },
                 .notification => |notif| {
@@ -235,6 +237,18 @@ pub const LspConnection = struct {
         });
     }
 
+    pub fn format(self: *LspConnection) !void {
+        const buffer = main.editor.active_buffer;
+        try self.sendRequest("textDocument/formatting", .{
+            .textDocument = .{ .uri = buffer.uri },
+            .options = .{
+                .tabSize = 4,
+                .insertSpaces = true,
+                .trimTrailingWhitespace = true,
+            },
+        });
+    }
+
     pub fn rename(self: *LspConnection, new_name: []const u8) !void {
         const buffer = main.editor.active_buffer;
         try self.sendRequest("textDocument/rename", .{
@@ -511,6 +525,19 @@ pub const LspConnection = struct {
         try self.applyWorkspaceEdit(result.value);
     }
 
+    fn handleFormattingResponse(self: *LspConnection, arena: Allocator, resp: ?std.json.Value) !void {
+        if (resp == null or resp.? == .null) return;
+        const result = try std.json.parseFromValue([]const types.TextEdit, arena, resp.?, .{});
+        log.debug(@This(), "got {} formatting edits\n", .{result.value.len});
+        {
+            main.main_loop_mutex.lock();
+            defer main.main_loop_mutex.unlock();
+            const buffer = main.editor.active_buffer;
+            try self.applyTextEdits(buffer, result.value);
+            try buffer.commitChanges();
+        }
+    }
+
     fn handleNotification(self: *LspConnection, arena: Allocator, notif: lsp.JsonRPCMessage.Notification) !void {
         _ = self;
         // log.debug(@This(), "notification: {s}\n", .{notif.method});
@@ -543,11 +570,7 @@ pub const LspConnection = struct {
             defer self.allocator.free(path);
             try main.editor.openBuffer(path);
             const buffer = main.editor.active_buffer;
-            for (text_edits) |edit| {
-                var change = try cha.Change.fromLsp(buffer.allocator, buffer, edit);
-                log.debug(@This(), "change: {s}: {}\n", .{ change_uri, change });
-                try buffer.appendChange(&change);
-            }
+            try self.applyTextEdits(buffer, text_edits);
             // TODO: apply another dummy edit that resets cursor position back to `old_cursor`
             // because now redoing rename jumps the cursor
             try buffer.commitChanges();
@@ -557,6 +580,15 @@ pub const LspConnection = struct {
         main.editor.active_buffer.offset = old_offset;
         main.editor.dirty.draw = true;
     }
+
+    fn applyTextEdits(self: *LspConnection, buffer: *buf.Buffer, text_edits: []const types.TextEdit) !void {
+        _ = self;
+        for (text_edits) |edit| {
+            var change = try cha.Change.fromLsp(buffer.allocator, buffer, edit);
+            log.debug(@This(), "change: {s}: {}\n", .{ buffer.path, change });
+            try buffer.appendChange(&change);
+        }
+    }
 };
 
 var request_id: i64 = 0;
diff --git a/src/main.zig b/src/main.zig
index 285f63d..bcb4e9e 100644
--- a/src/main.zig
+++ b/src/main.zig
@@ -337,6 +337,8 @@ fn startEditor(allocator: std.mem.Allocator) !void {
                         try buffer.findReferences();
                     } else if (editor.mode == .normal and eql(u8, multi_key, " n")) {
                         try buffer.renamePrompt();
+                    } else if (editor.mode == .normal and eql(u8, multi_key, " l")) {
+                        try buffer.format();
                     } else if (editor.mode == .normal and eql(u8, key, "r") and editor.key_queue.items[1].printable != null) {
                         const macro_name = key2.printable.?[0];
                         try editor.startMacro(macro_name);
